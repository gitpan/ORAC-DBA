Introduction
============
This is a literal entry field.  In other words, whatever you enter will be
plugged directly into a where statement.  For example, for the MY_COLUMN_2
varchar2 'Select SQL' entry field, you enter:

        LIKE 'Orac%'

This gets plugged into a select statement, thus:

        SELECT MY_COLUMN_1, MY_COLUMN_2, MY_DATE_COL
        FROM   MY_TABLE
        WHERE  MY_COLUMN_2 LIKE 'Orac%'


Additional Selection Filters
============================
Now you decide to enter another condition for MY_COLUMN_1, which is a
number field: 

        = 21

Your statement now becomes:

        SELECT MY_COLUMN_1, MY_COLUMN_2, MY_DATE_COL
        FROM   MY_TABLE
        WHERE  MY_COLUMN_1 = 21 
        AND    MY_COLUMN_2 LIKE 'Orac%'

And so on, for dates, floats, chars etc.  Anything breaking normal SQL
rules, will cause Orac to throw back an ugly error, but just correct it,
and carry on.


Hints for Dates
===============
NB: You can add extra selection criteria via ANY of the SQL Select boxes.
This is particularly useful for dates, for example, if you want all the
records on 02-SEP-98.  You normally can get away with:

        = '02-SEP-98'

But this will not cover any datetime entries which are not exactly
midnight, on September the 2nd.  In these cases, what you should in the
MY_DATE_COL entry field is:

        >= '02-SEP-98' AND MY_DATE_COL < '03-SEP-98'

This creates:

        SELECT MY_COLUMN_1, MY_COLUMN_2, MY_DATE_COL
        FROM   MY_TABLE
        WHERE  MY_COLUMN_1 = 21 
        AND    MY_COLUMN_2 LIKE 'Orac%'
        AND    MY_DATE_COL >= '02-SEP-98' AND MY_DATE_COL < '03-SEP-98'

This will pick up all the possible entries on that particular date, if
the default datestamp of midnight is not being used for data entry.

Obviously, you can extend this by embedding sub-selects and so on, but
I'll let you work that out for yourself.  Remember, get the syntax wrong,
and you'll get an ugly Orac error, but just keep going until you get what
you want.  You'll be able to see what you created later, with a 'See SQL'
button, in case you wish to see what Orac thought you wanted.


Further Notes
=============
The Orac Universal Form only deals with the following data types:

   NUMBER
   FLOAT
   VARCHAR2
   VARCHAR
   DATE
   CHAR

Longs, Blobs, Raws etc, are outside its scope.


Design & purpose of Orac Universal Form
=======================================
The purpose behind Universal Form is to give DBAs quick access to data
reference tables, used to manage database environments.  It can
be used for other purposes, but will not be extended in any direction
which is not about giving a DBA greater ease of control over their
database.


EOF
